name: sonar

# fairly sure someone could still exfil the secrets via a malicious POM
on:
    workflow_run:
        workflows: ['build']
        types:
            - completed

jobs:
    analyse:
        permissions:
            contents: read
            pull-requests: read
        environment: analysis
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        steps:
            - name: setup jdk
              uses: actions/setup-java@v2
              with:
                  java-version: '11'
                  distribution: 'adopt'

            - name: cache SonarCloud packages
              uses: actions/cache@v2
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar

            - name: cache maven
              uses: actions/cache@v2
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2-

            - name: download artifact
              uses: actions/github-script@v4
              with:
                  script: |
                      const artifacts = await github.actions.listWorkflowRunArtifacts({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        run_id: ${{ github.event.workflow_run.id }},
                      });
                      const matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                        return artifact.name == "dist"
                      })[0];

                      if (!matchArtifact) {
                        process.exit(0);
                      }

                      const download = await github.actions.downloadArtifact({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        artifact_id: matchArtifact.id,
                        archive_format: 'zip',
                      });
                      const fs = require('fs');
                      fs.writeFileSync('${{github.workspace}}/dist.zip', Buffer.from(download.data));

            - name: check if analyse needed
              id: check
              run: |
                  if [ -f "dist.zip" ]; then
                      echo "::set-output name=check::true"
                  else 
                      echo "::set-output name=check::false"
                  fi

            - name: extract artifact
              if: ${{ steps.check.outputs.check == 'true' }}
              run: unzip dist.zip

            - name: Build and analyze
              if: ${{ steps.check.outputs.check == 'true' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: |
                  if [ -f "git.sha" ]; then
                      mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar  -Dsonar.scm.revision=$(cat git.sha)
                  else 
                      mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
                  fi
                  SHA=$(cat git.sha)
